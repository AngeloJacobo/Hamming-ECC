
 /----------------------------------------------------------------------------\
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |  Copyright (C) 2012 - 2024  Claire Xenia Wolf <claire@yosyshq.com>         |
 |  Distributed under an ISC-like license, type "license" to see terms        |
 \----------------------------------------------------------------------------/
 Yosys 0.38+113 (git sha1 91fbd5898, clang++ 14.0.0-1ubuntu1.1 -fPIC -Os)

-- Executing script file `../model/design.ys' --

1. Executing Verilog-2005 frontend: ecc_formal.v
Parsing formal SystemVerilog input from `ecc_formal.v' to AST representation.
Storing AST representation for module `$abstract\ecc_formal'.
Successfully finished Verilog frontend.

2. Executing Verilog-2005 frontend: ecc_enc.sv
Parsing formal SystemVerilog input from `ecc_enc.sv' to AST representation.
Storing AST representation for module `$abstract\ecc_enc'.
Successfully finished Verilog frontend.

3. Executing Verilog-2005 frontend: ecc_dec.sv
Parsing formal SystemVerilog input from `ecc_dec.sv' to AST representation.
Storing AST representation for module `$abstract\ecc_dec'.
Successfully finished Verilog frontend.

4. Executing HIERARCHY pass (managing design hierarchy).
Parameter \K = 16

5. Executing AST frontend in derive mode using pre-parsed AST for module `\ecc_formal'.
Parameter \K = 16
Generating RTLIL representation for module `$paramod\ecc_formal\K=32'00000000000000000000000000010000'.

5.1. Analyzing design hierarchy..
Top module:  \ecc_formal
Parameter \K = 16
Parameter \P0_LSB = 0

5.2. Executing AST frontend in derive mode using pre-parsed AST for module `\ecc_enc'.
Parameter \K = 16
Parameter \P0_LSB = 0
Generating RTLIL representation for module `$paramod$0215d1033c08c4f67a7b1e7962c82006c46f15ed\ecc_enc'.
Parameter \K = 16
Parameter \LATENCY = 0
Parameter \P0_LSB = 0

5.3. Executing AST frontend in derive mode using pre-parsed AST for module `\ecc_dec'.
Parameter \K = 16
Parameter \LATENCY = 0
Parameter \P0_LSB = 0
Generating RTLIL representation for module `$paramod$c7395fb960b77b2e572a32b960749f29a7065c4a\ecc_dec'.

5.4. Analyzing design hierarchy..
Top module:  \ecc_formal
Used module:     $paramod$0215d1033c08c4f67a7b1e7962c82006c46f15ed\ecc_enc
Used module:     $paramod$c7395fb960b77b2e572a32b960749f29a7065c4a\ecc_dec

5.5. Analyzing design hierarchy..
Top module:  \ecc_formal
Used module:     $paramod$0215d1033c08c4f67a7b1e7962c82006c46f15ed\ecc_enc
Used module:     $paramod$c7395fb960b77b2e572a32b960749f29a7065c4a\ecc_dec
Removing unused module `$paramod\ecc_formal\K=32'00000000000000000000000000010000'.
Removing unused module `$abstract\ecc_dec'.
Removing unused module `$abstract\ecc_enc'.
Removing unused module `$abstract\ecc_formal'.
Removed 4 unused modules.
Module ecc_formal directly or indirectly contains formal properties -> setting "keep" attribute.

6. Executing PREP pass.

6.1. Executing HIERARCHY pass (managing design hierarchy).

6.1.1. Analyzing design hierarchy..
Top module:  \ecc_formal
Used module:     $paramod$0215d1033c08c4f67a7b1e7962c82006c46f15ed\ecc_enc
Used module:     $paramod$c7395fb960b77b2e572a32b960749f29a7065c4a\ecc_dec

6.1.2. Analyzing design hierarchy..
Top module:  \ecc_formal
Used module:     $paramod$0215d1033c08c4f67a7b1e7962c82006c46f15ed\ecc_enc
Used module:     $paramod$c7395fb960b77b2e572a32b960749f29a7065c4a\ecc_dec
Removed 0 unused modules.
Module ecc_formal directly or indirectly contains formal properties -> setting "keep" attribute.

6.2. Executing PROC pass (convert processes to netlists).

6.2.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 105 empty switches in `$paramod$0215d1033c08c4f67a7b1e7962c82006c46f15ed\ecc_enc.$proc$ecc_enc.sv:0$273'.
Found and cleaned up 21 empty switches in `$paramod$0215d1033c08c4f67a7b1e7962c82006c46f15ed\ecc_enc.$proc$ecc_enc.sv:0$187'.
Found and cleaned up 6 empty switches in `$paramod$c7395fb960b77b2e572a32b960749f29a7065c4a\ecc_dec.$proc$ecc_dec.sv:0$524'.
Found and cleaned up 105 empty switches in `$paramod$c7395fb960b77b2e572a32b960749f29a7065c4a\ecc_dec.$proc$ecc_dec.sv:0$413'.
Cleaned up 237 empty switches.

6.2.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 2 switch rules as full_case in process $proc$ecc_formal.v:66$31 in module ecc_formal.
Marked 2 switch rules as full_case in process $proc$ecc_formal.v:81$75 in module ecc_formal.
Marked 31 switch rules as full_case in process $proc$ecc_dec.sv:0$524 in module $paramod$c7395fb960b77b2e572a32b960749f29a7065c4a\ecc_dec.
Removed a total of 0 dead cases.

6.2.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 15 redundant assignments.
Promoted 287 assignments to connections.

6.2.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\ecc_formal.$proc$ecc_formal.v:62$178'.
  Set init value: \f_counter = 10'0000000000

6.2.5. Executing PROC_ARST pass (detect async resets in processes).

6.2.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.
<suppressed ~36 debug messages>

6.2.7. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `$paramod$0215d1033c08c4f67a7b1e7962c82006c46f15ed\ecc_enc.$proc$ecc_enc.sv:0$369'.
Creating decoders for process `$paramod$0215d1033c08c4f67a7b1e7962c82006c46f15ed\ecc_enc.$proc$ecc_enc.sv:0$273'.
Creating decoders for process `$paramod$0215d1033c08c4f67a7b1e7962c82006c46f15ed\ecc_enc.$proc$ecc_enc.sv:0$187'.
Creating decoders for process `\ecc_formal.$proc$ecc_formal.v:66$31'.
     1/7: $2\q_o_enc_corrupted[21:0]
     2/7: $2$bitselwrite$pos$ecc_formal.v:73$14[4:0]$50
     3/7: $2$bitselwrite$pos$ecc_formal.v:72$13[4:0]$49
     4/7: $1\q_o_enc_corrupted[21:0]
     5/7: $1$bitselwrite$pos$ecc_formal.v:69$12[4:0]$36
     6/7: $1$bitselwrite$pos$ecc_formal.v:73$14[4:0]$38
     7/7: $1$bitselwrite$pos$ecc_formal.v:72$13[4:0]$37
Creating decoders for process `\ecc_formal.$proc$ecc_formal.v:81$75'.
     1/8: $assert$ecc_formal.v:97$94_EN
     2/8: $assert$ecc_formal.v:96$92_EN
     3/8: $assert$ecc_formal.v:92$89_EN
     4/8: $assert$ecc_formal.v:91$88_EN
     5/8: $assert$ecc_formal.v:90$86_EN
     6/8: $assert$ecc_formal.v:86$83_EN
     7/8: $assert$ecc_formal.v:85$81_EN
     8/8: $assert$ecc_formal.v:84$79_EN
Creating decoders for process `\ecc_formal.$proc$ecc_formal.v:102$95'.
Creating decoders for process `\ecc_formal.$proc$ecc_formal.v:109$101'.
Creating decoders for process `\ecc_formal.$proc$ecc_formal.v:61$177'.
Creating decoders for process `\ecc_formal.$proc$ecc_formal.v:62$178'.
Creating decoders for process `$paramod$c7395fb960b77b2e572a32b960749f29a7065c4a\ecc_dec.$proc$ecc_dec.sv:0$654'.
Creating decoders for process `$paramod$c7395fb960b77b2e572a32b960749f29a7065c4a\ecc_dec.$proc$ecc_dec.sv:0$642'.
Creating decoders for process `$paramod$c7395fb960b77b2e572a32b960749f29a7065c4a\ecc_dec.$proc$ecc_dec.sv:0$524'.
     1/301: $32\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$641 [15]
     2/301: $32\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$641 [12]
     3/301: $32\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$641 [10]
     4/301: $32\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$641 [8]
     5/301: $32\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$641 [6]
     6/301: $32\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$641 [4]
     7/301: $32\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$641 [2]
     8/301: $32\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$641 [0]
     9/301: $32\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$641 [14]
    10/301: $32\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$641 [9]
    11/301: $32\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$641 [5]
    12/301: $32\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$641 [1]
    13/301: $32\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$641 [11]
    14/301: $32\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$641 [3]
    15/301: $32\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$641 [7]
    16/301: $32\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$641 [13]
    17/301: $31\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$636
    18/301: $1$bitselwrite$rvalue$ecc_dec.sv:180$399[0:0]$638
    19/301: $16\extract_q$func$ecc_dec.sv:270$383.bit_idx[31:0]$637
    20/301: $30\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$635 [15]
    21/301: $30\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$635 [12]
    22/301: $30\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$635 [10]
    23/301: $30\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$635 [8]
    24/301: $30\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$635 [6]
    25/301: $30\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$635 [4]
    26/301: $30\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$635 [2]
    27/301: $30\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$635 [0]
    28/301: $30\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$635 [14]
    29/301: $30\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$635 [9]
    30/301: $30\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$635 [5]
    31/301: $30\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$635 [1]
    32/301: $30\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$635 [11]
    33/301: $30\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$635 [3]
    34/301: $30\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$635 [7]
    35/301: $30\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$635 [13]
    36/301: $29\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$630
    37/301: $1$bitselwrite$rvalue$ecc_dec.sv:180$398[0:0]$632
    38/301: $15\extract_q$func$ecc_dec.sv:270$383.bit_idx[31:0]$631
    39/301: $28\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$629 [15]
    40/301: $28\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$629 [12]
    41/301: $28\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$629 [10]
    42/301: $28\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$629 [8]
    43/301: $28\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$629 [6]
    44/301: $28\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$629 [4]
    45/301: $28\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$629 [2]
    46/301: $28\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$629 [0]
    47/301: $28\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$629 [14]
    48/301: $28\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$629 [9]
    49/301: $28\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$629 [5]
    50/301: $28\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$629 [1]
    51/301: $28\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$629 [11]
    52/301: $28\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$629 [3]
    53/301: $28\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$629 [7]
    54/301: $28\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$629 [13]
    55/301: $27\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$624
    56/301: $1$bitselwrite$rvalue$ecc_dec.sv:180$397[0:0]$626
    57/301: $14\extract_q$func$ecc_dec.sv:270$383.bit_idx[31:0]$625
    58/301: $26\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$623 [15]
    59/301: $26\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$623 [12]
    60/301: $26\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$623 [10]
    61/301: $26\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$623 [8]
    62/301: $26\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$623 [6]
    63/301: $26\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$623 [4]
    64/301: $26\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$623 [2]
    65/301: $26\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$623 [0]
    66/301: $26\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$623 [14]
    67/301: $26\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$623 [9]
    68/301: $26\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$623 [5]
    69/301: $26\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$623 [1]
    70/301: $26\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$623 [11]
    71/301: $26\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$623 [3]
    72/301: $26\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$623 [7]
    73/301: $26\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$623 [13]
    74/301: $25\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$618
    75/301: $1$bitselwrite$rvalue$ecc_dec.sv:180$396[0:0]$620
    76/301: $13\extract_q$func$ecc_dec.sv:270$383.bit_idx[31:0]$619
    77/301: $24\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$617 [15]
    78/301: $24\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$617 [12]
    79/301: $24\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$617 [10]
    80/301: $24\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$617 [8]
    81/301: $24\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$617 [6]
    82/301: $24\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$617 [4]
    83/301: $24\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$617 [2]
    84/301: $24\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$617 [0]
    85/301: $24\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$617 [14]
    86/301: $24\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$617 [9]
    87/301: $24\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$617 [5]
    88/301: $24\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$617 [1]
    89/301: $24\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$617 [11]
    90/301: $24\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$617 [3]
    91/301: $24\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$617 [7]
    92/301: $24\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$617 [13]
    93/301: $23\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$612
    94/301: $1$bitselwrite$rvalue$ecc_dec.sv:180$395[0:0]$614
    95/301: $12\extract_q$func$ecc_dec.sv:270$383.bit_idx[31:0]$613
    96/301: $22\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$611 [15]
    97/301: $22\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$611 [12]
    98/301: $22\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$611 [10]
    99/301: $22\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$611 [8]
   100/301: $22\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$611 [6]
   101/301: $22\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$611 [4]
   102/301: $22\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$611 [2]
   103/301: $22\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$611 [0]
   104/301: $22\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$611 [14]
   105/301: $22\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$611 [9]
   106/301: $22\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$611 [5]
   107/301: $22\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$611 [1]
   108/301: $22\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$611 [11]
   109/301: $22\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$611 [3]
   110/301: $22\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$611 [7]
   111/301: $22\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$611 [13]
   112/301: $21\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$606
   113/301: $1$bitselwrite$rvalue$ecc_dec.sv:180$394[0:0]$608
   114/301: $11\extract_q$func$ecc_dec.sv:270$383.bit_idx[31:0]$607
   115/301: $20\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$605 [15]
   116/301: $20\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$605 [12]
   117/301: $20\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$605 [10]
   118/301: $20\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$605 [8]
   119/301: $20\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$605 [6]
   120/301: $20\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$605 [4]
   121/301: $20\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$605 [2]
   122/301: $20\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$605 [0]
   123/301: $20\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$605 [14]
   124/301: $20\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$605 [9]
   125/301: $20\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$605 [5]
   126/301: $20\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$605 [1]
   127/301: $20\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$605 [11]
   128/301: $20\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$605 [3]
   129/301: $20\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$605 [7]
   130/301: $20\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$605 [13]
   131/301: $19\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$600
   132/301: $1$bitselwrite$rvalue$ecc_dec.sv:180$393[0:0]$602
   133/301: $10\extract_q$func$ecc_dec.sv:270$383.bit_idx[31:0]$601
   134/301: $18\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$599 [15]
   135/301: $18\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$599 [12]
   136/301: $18\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$599 [10]
   137/301: $18\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$599 [8]
   138/301: $18\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$599 [6]
   139/301: $18\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$599 [4]
   140/301: $18\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$599 [2]
   141/301: $18\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$599 [0]
   142/301: $18\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$599 [14]
   143/301: $18\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$599 [9]
   144/301: $18\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$599 [5]
   145/301: $18\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$599 [1]
   146/301: $18\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$599 [11]
   147/301: $18\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$599 [3]
   148/301: $18\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$599 [7]
   149/301: $18\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$599 [13]
   150/301: $17\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$594
   151/301: $1$bitselwrite$rvalue$ecc_dec.sv:180$392[0:0]$596
   152/301: $9\extract_q$func$ecc_dec.sv:270$383.bit_idx[31:0]$595
   153/301: $16\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$593 [15]
   154/301: $16\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$593 [12]
   155/301: $16\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$593 [10]
   156/301: $16\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$593 [8]
   157/301: $16\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$593 [6]
   158/301: $16\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$593 [4]
   159/301: $16\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$593 [2]
   160/301: $16\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$593 [0]
   161/301: $16\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$593 [14]
   162/301: $16\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$593 [9]
   163/301: $16\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$593 [5]
   164/301: $16\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$593 [1]
   165/301: $16\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$593 [11]
   166/301: $16\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$593 [3]
   167/301: $16\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$593 [7]
   168/301: $16\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$593 [13]
   169/301: $15\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$588
   170/301: $1$bitselwrite$rvalue$ecc_dec.sv:180$391[0:0]$590
   171/301: $8\extract_q$func$ecc_dec.sv:270$383.bit_idx[31:0]$589
   172/301: $14\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$587 [15]
   173/301: $14\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$587 [12]
   174/301: $14\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$587 [10]
   175/301: $14\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$587 [8]
   176/301: $14\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$587 [6]
   177/301: $14\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$587 [4]
   178/301: $14\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$587 [2]
   179/301: $14\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$587 [0]
   180/301: $14\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$587 [14]
   181/301: $14\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$587 [9]
   182/301: $14\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$587 [5]
   183/301: $14\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$587 [1]
   184/301: $14\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$587 [11]
   185/301: $14\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$587 [3]
   186/301: $14\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$587 [7]
   187/301: $14\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$587 [13]
   188/301: $13\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$582
   189/301: $1$bitselwrite$rvalue$ecc_dec.sv:180$390[0:0]$584
   190/301: $7\extract_q$func$ecc_dec.sv:270$383.bit_idx[31:0]$583
   191/301: $12\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$581 [15]
   192/301: $12\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$581 [12]
   193/301: $12\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$581 [10]
   194/301: $12\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$581 [8]
   195/301: $12\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$581 [6]
   196/301: $12\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$581 [4]
   197/301: $12\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$581 [2]
   198/301: $12\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$581 [0]
   199/301: $12\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$581 [14]
   200/301: $12\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$581 [9]
   201/301: $12\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$581 [5]
   202/301: $12\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$581 [1]
   203/301: $12\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$581 [11]
   204/301: $12\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$581 [3]
   205/301: $12\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$581 [7]
   206/301: $12\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$581 [13]
   207/301: $11\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$576
   208/301: $1$bitselwrite$rvalue$ecc_dec.sv:180$389[0:0]$578
   209/301: $6\extract_q$func$ecc_dec.sv:270$383.bit_idx[31:0]$577
   210/301: $10\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$575 [15]
   211/301: $10\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$575 [12]
   212/301: $10\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$575 [10]
   213/301: $10\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$575 [8]
   214/301: $10\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$575 [6]
   215/301: $10\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$575 [4]
   216/301: $10\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$575 [2]
   217/301: $10\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$575 [0]
   218/301: $10\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$575 [14]
   219/301: $10\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$575 [9]
   220/301: $10\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$575 [5]
   221/301: $10\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$575 [1]
   222/301: $10\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$575 [11]
   223/301: $10\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$575 [3]
   224/301: $10\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$575 [7]
   225/301: $10\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$575 [13]
   226/301: $9\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$570
   227/301: $1$bitselwrite$rvalue$ecc_dec.sv:180$388[0:0]$572
   228/301: $5\extract_q$func$ecc_dec.sv:270$383.bit_idx[31:0]$571
   229/301: $8\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$569 [15]
   230/301: $8\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$569 [12]
   231/301: $8\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$569 [10]
   232/301: $8\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$569 [8]
   233/301: $8\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$569 [6]
   234/301: $8\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$569 [4]
   235/301: $8\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$569 [2]
   236/301: $8\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$569 [0]
   237/301: $8\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$569 [14]
   238/301: $8\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$569 [9]
   239/301: $8\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$569 [5]
   240/301: $8\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$569 [1]
   241/301: $8\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$569 [11]
   242/301: $8\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$569 [3]
   243/301: $8\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$569 [7]
   244/301: $8\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$569 [13]
   245/301: $7\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$564
   246/301: $1$bitselwrite$rvalue$ecc_dec.sv:180$387[0:0]$566
   247/301: $4\extract_q$func$ecc_dec.sv:270$383.bit_idx[31:0]$565
   248/301: $6\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$563 [15]
   249/301: $6\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$563 [12]
   250/301: $6\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$563 [10]
   251/301: $6\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$563 [8]
   252/301: $6\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$563 [6]
   253/301: $6\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$563 [4]
   254/301: $6\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$563 [2]
   255/301: $6\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$563 [0]
   256/301: $6\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$563 [14]
   257/301: $6\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$563 [9]
   258/301: $6\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$563 [5]
   259/301: $6\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$563 [1]
   260/301: $6\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$563 [11]
   261/301: $6\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$563 [3]
   262/301: $6\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$563 [7]
   263/301: $6\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$563 [13]
   264/301: $5\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$558
   265/301: $1$bitselwrite$rvalue$ecc_dec.sv:180$386[0:0]$560
   266/301: $3\extract_q$func$ecc_dec.sv:270$383.bit_idx[31:0]$559
   267/301: $4\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$557 [15]
   268/301: $4\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$557 [12]
   269/301: $4\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$557 [10]
   270/301: $4\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$557 [8]
   271/301: $4\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$557 [6]
   272/301: $4\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$557 [4]
   273/301: $4\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$557 [2]
   274/301: $4\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$557 [0]
   275/301: $4\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$557 [14]
   276/301: $4\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$557 [9]
   277/301: $4\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$557 [5]
   278/301: $4\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$557 [1]
   279/301: $4\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$557 [11]
   280/301: $4\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$557 [3]
   281/301: $4\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$557 [7]
   282/301: $4\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$557 [13]
   283/301: $3\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$552
   284/301: $1$bitselwrite$rvalue$ecc_dec.sv:180$385[0:0]$554
   285/301: $2\extract_q$func$ecc_dec.sv:270$383.bit_idx[31:0]$553
   286/301: $2\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$551 [15]
   287/301: $2\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$551 [12]
   288/301: $2\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$551 [10]
   289/301: $2\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$551 [8]
   290/301: $2\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$551 [6]
   291/301: $2\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$551 [4]
   292/301: $2\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$551 [2]
   293/301: $2\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$551 [0]
   294/301: $2\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$551 [14]
   295/301: $2\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$551 [9]
   296/301: $2\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$551 [5]
   297/301: $2\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$551 [1]
   298/301: $2\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$551 [11]
   299/301: $2\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$551 [3]
   300/301: $2\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$551 [7]
   301/301: $2\extract_q$func$ecc_dec.sv:270$383.$result[15:0]$551 [13]
Creating decoders for process `$paramod$c7395fb960b77b2e572a32b960749f29a7065c4a\ecc_dec.$proc$ecc_dec.sv:0$509'.
Creating decoders for process `$paramod$c7395fb960b77b2e572a32b960749f29a7065c4a\ecc_dec.$proc$ecc_dec.sv:0$413'.

6.2.8. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `$paramod$0215d1033c08c4f67a7b1e7962c82006c46f15ed\ecc_enc.\store_p_in_codeword$func$ecc_enc.sv:210$182.$result' from process `$paramod$0215d1033c08c4f67a7b1e7962c82006c46f15ed\ecc_enc.$proc$ecc_enc.sv:0$369'.
No latch inferred for signal `$paramod$0215d1033c08c4f67a7b1e7962c82006c46f15ed\ecc_enc.\store_p_in_codeword$func$ecc_enc.sv:210$185.$result' from process `$paramod$0215d1033c08c4f67a7b1e7962c82006c46f15ed\ecc_enc.$proc$ecc_enc.sv:0$369'.
No latch inferred for signal `$paramod$0215d1033c08c4f67a7b1e7962c82006c46f15ed\ecc_enc.\store_p_in_codeword$func$ecc_enc.sv:210$185.cw' from process `$paramod$0215d1033c08c4f67a7b1e7962c82006c46f15ed\ecc_enc.$proc$ecc_enc.sv:0$369'.
No latch inferred for signal `$paramod$0215d1033c08c4f67a7b1e7962c82006c46f15ed\ecc_enc.\store_p_in_codeword$func$ecc_enc.sv:210$185.p' from process `$paramod$0215d1033c08c4f67a7b1e7962c82006c46f15ed\ecc_enc.$proc$ecc_enc.sv:0$369'.
No latch inferred for signal `$paramod$0215d1033c08c4f67a7b1e7962c82006c46f15ed\ecc_enc.\store_p_in_codeword$func$ecc_enc.sv:210$185.i' from process `$paramod$0215d1033c08c4f67a7b1e7962c82006c46f15ed\ecc_enc.$proc$ecc_enc.sv:0$369'.
No latch inferred for signal `$paramod$0215d1033c08c4f67a7b1e7962c82006c46f15ed\ecc_enc.\calculate_p$func$ecc_enc.sv:207$181.$result' from process `$paramod$0215d1033c08c4f67a7b1e7962c82006c46f15ed\ecc_enc.$proc$ecc_enc.sv:0$273'.
No latch inferred for signal `$paramod$0215d1033c08c4f67a7b1e7962c82006c46f15ed\ecc_enc.\calculate_p$func$ecc_enc.sv:207$184.$result' from process `$paramod$0215d1033c08c4f67a7b1e7962c82006c46f15ed\ecc_enc.$proc$ecc_enc.sv:0$273'.
No latch inferred for signal `$paramod$0215d1033c08c4f67a7b1e7962c82006c46f15ed\ecc_enc.\calculate_p$func$ecc_enc.sv:207$184.cw' from process `$paramod$0215d1033c08c4f67a7b1e7962c82006c46f15ed\ecc_enc.$proc$ecc_enc.sv:0$273'.
No latch inferred for signal `$paramod$0215d1033c08c4f67a7b1e7962c82006c46f15ed\ecc_enc.\calculate_p$func$ecc_enc.sv:207$184.p_idx' from process `$paramod$0215d1033c08c4f67a7b1e7962c82006c46f15ed\ecc_enc.$proc$ecc_enc.sv:0$273'.
No latch inferred for signal `$paramod$0215d1033c08c4f67a7b1e7962c82006c46f15ed\ecc_enc.\calculate_p$func$ecc_enc.sv:207$184.cw_idx' from process `$paramod$0215d1033c08c4f67a7b1e7962c82006c46f15ed\ecc_enc.$proc$ecc_enc.sv:0$273'.
No latch inferred for signal `$paramod$0215d1033c08c4f67a7b1e7962c82006c46f15ed\ecc_enc.\store_dbits_in_codeword$func$ecc_enc.sv:204$180.$result' from process `$paramod$0215d1033c08c4f67a7b1e7962c82006c46f15ed\ecc_enc.$proc$ecc_enc.sv:0$187'.
No latch inferred for signal `$paramod$0215d1033c08c4f67a7b1e7962c82006c46f15ed\ecc_enc.\store_dbits_in_codeword$func$ecc_enc.sv:204$183.$result' from process `$paramod$0215d1033c08c4f67a7b1e7962c82006c46f15ed\ecc_enc.$proc$ecc_enc.sv:0$187'.
No latch inferred for signal `$paramod$0215d1033c08c4f67a7b1e7962c82006c46f15ed\ecc_enc.\store_dbits_in_codeword$func$ecc_enc.sv:204$183.d' from process `$paramod$0215d1033c08c4f67a7b1e7962c82006c46f15ed\ecc_enc.$proc$ecc_enc.sv:0$187'.
No latch inferred for signal `$paramod$0215d1033c08c4f67a7b1e7962c82006c46f15ed\ecc_enc.\store_dbits_in_codeword$func$ecc_enc.sv:204$183.bit_idx' from process `$paramod$0215d1033c08c4f67a7b1e7962c82006c46f15ed\ecc_enc.$proc$ecc_enc.sv:0$187'.
No latch inferred for signal `$paramod$0215d1033c08c4f67a7b1e7962c82006c46f15ed\ecc_enc.\store_dbits_in_codeword$func$ecc_enc.sv:204$183.cw_idx' from process `$paramod$0215d1033c08c4f67a7b1e7962c82006c46f15ed\ecc_enc.$proc$ecc_enc.sv:0$187'.
No latch inferred for signal `\ecc_formal.\q_o_enc_corrupted' from process `\ecc_formal.$proc$ecc_formal.v:66$31'.
No latch inferred for signal `\ecc_formal.$bitselwrite$pos$ecc_formal.v:69$12' from process `\ecc_formal.$proc$ecc_formal.v:66$31'.
No latch inferred for signal `\ecc_formal.$bitselwrite$pos$ecc_formal.v:72$13' from process `\ecc_formal.$proc$ecc_formal.v:66$31'.
No latch inferred for signal `\ecc_formal.$bitselwrite$pos$ecc_formal.v:73$14' from process `\ecc_formal.$proc$ecc_formal.v:66$31'.
No latch inferred for signal `\ecc_formal.\f_clk' from process `\ecc_formal.$proc$ecc_formal.v:61$177'.
No latch inferred for signal `$paramod$c7395fb960b77b2e572a32b960749f29a7065c4a\ecc_dec.\sb_err_o' from process `$paramod$c7395fb960b77b2e572a32b960749f29a7065c4a\ecc_dec.$proc$ecc_dec.sv:0$654'.
No latch inferred for signal `$paramod$c7395fb960b77b2e572a32b960749f29a7065c4a\ecc_dec.\db_err_o' from process `$paramod$c7395fb960b77b2e572a32b960749f29a7065c4a\ecc_dec.$proc$ecc_dec.sv:0$654'.
No latch inferred for signal `$paramod$c7395fb960b77b2e572a32b960749f29a7065c4a\ecc_dec.\q_o' from process `$paramod$c7395fb960b77b2e572a32b960749f29a7065c4a\ecc_dec.$proc$ecc_dec.sv:0$654'.
No latch inferred for signal `$paramod$c7395fb960b77b2e572a32b960749f29a7065c4a\ecc_dec.\syndrome_o' from process `$paramod$c7395fb960b77b2e572a32b960749f29a7065c4a\ecc_dec.$proc$ecc_dec.sv:0$654'.
No latch inferred for signal `$paramod$c7395fb960b77b2e572a32b960749f29a7065c4a\ecc_dec.\sb_fix_o' from process `$paramod$c7395fb960b77b2e572a32b960749f29a7065c4a\ecc_dec.$proc$ecc_dec.sv:0$654'.
No latch inferred for signal `$paramod$c7395fb960b77b2e572a32b960749f29a7065c4a\ecc_dec.\information_error$func$ecc_dec.sv:275$379.$result' from process `$paramod$c7395fb960b77b2e572a32b960749f29a7065c4a\ecc_dec.$proc$ecc_dec.sv:0$642'.
No latch inferred for signal `$paramod$c7395fb960b77b2e572a32b960749f29a7065c4a\ecc_dec.\information_error$func$ecc_dec.sv:275$400.$result' from process `$paramod$c7395fb960b77b2e572a32b960749f29a7065c4a\ecc_dec.$proc$ecc_dec.sv:0$642'.
No latch inferred for signal `$paramod$c7395fb960b77b2e572a32b960749f29a7065c4a\ecc_dec.\information_error$func$ecc_dec.sv:275$400.syndrome' from process `$paramod$c7395fb960b77b2e572a32b960749f29a7065c4a\ecc_dec.$proc$ecc_dec.sv:0$642'.
No latch inferred for signal `$paramod$c7395fb960b77b2e572a32b960749f29a7065c4a\ecc_dec.\is_power_of_2$func$ecc_dec.sv:193$401.$result' from process `$paramod$c7395fb960b77b2e572a32b960749f29a7065c4a\ecc_dec.$proc$ecc_dec.sv:0$642'.
No latch inferred for signal `$paramod$c7395fb960b77b2e572a32b960749f29a7065c4a\ecc_dec.\is_power_of_2$func$ecc_dec.sv:193$401.n' from process `$paramod$c7395fb960b77b2e572a32b960749f29a7065c4a\ecc_dec.$proc$ecc_dec.sv:0$642'.
No latch inferred for signal `$paramod$c7395fb960b77b2e572a32b960749f29a7065c4a\ecc_dec.\extract_q$func$ecc_dec.sv:270$378.$result' from process `$paramod$c7395fb960b77b2e572a32b960749f29a7065c4a\ecc_dec.$proc$ecc_dec.sv:0$524'.
No latch inferred for signal `$paramod$c7395fb960b77b2e572a32b960749f29a7065c4a\ecc_dec.\extract_q$func$ecc_dec.sv:270$383.$result' from process `$paramod$c7395fb960b77b2e572a32b960749f29a7065c4a\ecc_dec.$proc$ecc_dec.sv:0$524'.
No latch inferred for signal `$paramod$c7395fb960b77b2e572a32b960749f29a7065c4a\ecc_dec.\extract_q$func$ecc_dec.sv:270$383.cw' from process `$paramod$c7395fb960b77b2e572a32b960749f29a7065c4a\ecc_dec.$proc$ecc_dec.sv:0$524'.
No latch inferred for signal `$paramod$c7395fb960b77b2e572a32b960749f29a7065c4a\ecc_dec.\extract_q$func$ecc_dec.sv:270$383.bit_idx' from process `$paramod$c7395fb960b77b2e572a32b960749f29a7065c4a\ecc_dec.$proc$ecc_dec.sv:0$524'.
No latch inferred for signal `$paramod$c7395fb960b77b2e572a32b960749f29a7065c4a\ecc_dec.\extract_q$func$ecc_dec.sv:270$383.cw_idx' from process `$paramod$c7395fb960b77b2e572a32b960749f29a7065c4a\ecc_dec.$proc$ecc_dec.sv:0$524'.
No latch inferred for signal `$paramod$c7395fb960b77b2e572a32b960749f29a7065c4a\ecc_dec.$bitselwrite$rvalue$ecc_dec.sv:180$384' from process `$paramod$c7395fb960b77b2e572a32b960749f29a7065c4a\ecc_dec.$proc$ecc_dec.sv:0$524'.
No latch inferred for signal `$paramod$c7395fb960b77b2e572a32b960749f29a7065c4a\ecc_dec.$bitselwrite$rvalue$ecc_dec.sv:180$385' from process `$paramod$c7395fb960b77b2e572a32b960749f29a7065c4a\ecc_dec.$proc$ecc_dec.sv:0$524'.
No latch inferred for signal `$paramod$c7395fb960b77b2e572a32b960749f29a7065c4a\ecc_dec.$bitselwrite$rvalue$ecc_dec.sv:180$386' from process `$paramod$c7395fb960b77b2e572a32b960749f29a7065c4a\ecc_dec.$proc$ecc_dec.sv:0$524'.
No latch inferred for signal `$paramod$c7395fb960b77b2e572a32b960749f29a7065c4a\ecc_dec.$bitselwrite$rvalue$ecc_dec.sv:180$387' from process `$paramod$c7395fb960b77b2e572a32b960749f29a7065c4a\ecc_dec.$proc$ecc_dec.sv:0$524'.
No latch inferred for signal `$paramod$c7395fb960b77b2e572a32b960749f29a7065c4a\ecc_dec.$bitselwrite$rvalue$ecc_dec.sv:180$388' from process `$paramod$c7395fb960b77b2e572a32b960749f29a7065c4a\ecc_dec.$proc$ecc_dec.sv:0$524'.
No latch inferred for signal `$paramod$c7395fb960b77b2e572a32b960749f29a7065c4a\ecc_dec.$bitselwrite$rvalue$ecc_dec.sv:180$389' from process `$paramod$c7395fb960b77b2e572a32b960749f29a7065c4a\ecc_dec.$proc$ecc_dec.sv:0$524'.
No latch inferred for signal `$paramod$c7395fb960b77b2e572a32b960749f29a7065c4a\ecc_dec.$bitselwrite$rvalue$ecc_dec.sv:180$390' from process `$paramod$c7395fb960b77b2e572a32b960749f29a7065c4a\ecc_dec.$proc$ecc_dec.sv:0$524'.
No latch inferred for signal `$paramod$c7395fb960b77b2e572a32b960749f29a7065c4a\ecc_dec.$bitselwrite$rvalue$ecc_dec.sv:180$391' from process `$paramod$c7395fb960b77b2e572a32b960749f29a7065c4a\ecc_dec.$proc$ecc_dec.sv:0$524'.
No latch inferred for signal `$paramod$c7395fb960b77b2e572a32b960749f29a7065c4a\ecc_dec.$bitselwrite$rvalue$ecc_dec.sv:180$392' from process `$paramod$c7395fb960b77b2e572a32b960749f29a7065c4a\ecc_dec.$proc$ecc_dec.sv:0$524'.
No latch inferred for signal `$paramod$c7395fb960b77b2e572a32b960749f29a7065c4a\ecc_dec.$bitselwrite$rvalue$ecc_dec.sv:180$393' from process `$paramod$c7395fb960b77b2e572a32b960749f29a7065c4a\ecc_dec.$proc$ecc_dec.sv:0$524'.
No latch inferred for signal `$paramod$c7395fb960b77b2e572a32b960749f29a7065c4a\ecc_dec.$bitselwrite$rvalue$ecc_dec.sv:180$394' from process `$paramod$c7395fb960b77b2e572a32b960749f29a7065c4a\ecc_dec.$proc$ecc_dec.sv:0$524'.
No latch inferred for signal `$paramod$c7395fb960b77b2e572a32b960749f29a7065c4a\ecc_dec.$bitselwrite$rvalue$ecc_dec.sv:180$395' from process `$paramod$c7395fb960b77b2e572a32b960749f29a7065c4a\ecc_dec.$proc$ecc_dec.sv:0$524'.
No latch inferred for signal `$paramod$c7395fb960b77b2e572a32b960749f29a7065c4a\ecc_dec.$bitselwrite$rvalue$ecc_dec.sv:180$396' from process `$paramod$c7395fb960b77b2e572a32b960749f29a7065c4a\ecc_dec.$proc$ecc_dec.sv:0$524'.
No latch inferred for signal `$paramod$c7395fb960b77b2e572a32b960749f29a7065c4a\ecc_dec.$bitselwrite$rvalue$ecc_dec.sv:180$397' from process `$paramod$c7395fb960b77b2e572a32b960749f29a7065c4a\ecc_dec.$proc$ecc_dec.sv:0$524'.
No latch inferred for signal `$paramod$c7395fb960b77b2e572a32b960749f29a7065c4a\ecc_dec.$bitselwrite$rvalue$ecc_dec.sv:180$398' from process `$paramod$c7395fb960b77b2e572a32b960749f29a7065c4a\ecc_dec.$proc$ecc_dec.sv:0$524'.
No latch inferred for signal `$paramod$c7395fb960b77b2e572a32b960749f29a7065c4a\ecc_dec.$bitselwrite$rvalue$ecc_dec.sv:180$399' from process `$paramod$c7395fb960b77b2e572a32b960749f29a7065c4a\ecc_dec.$proc$ecc_dec.sv:0$524'.
No latch inferred for signal `$paramod$c7395fb960b77b2e572a32b960749f29a7065c4a\ecc_dec.\correct_codeword$func$ecc_dec.sv:267$377.$result' from process `$paramod$c7395fb960b77b2e572a32b960749f29a7065c4a\ecc_dec.$proc$ecc_dec.sv:0$509'.
No latch inferred for signal `$paramod$c7395fb960b77b2e572a32b960749f29a7065c4a\ecc_dec.\correct_codeword$func$ecc_dec.sv:267$381.$result' from process `$paramod$c7395fb960b77b2e572a32b960749f29a7065c4a\ecc_dec.$proc$ecc_dec.sv:0$509'.
No latch inferred for signal `$paramod$c7395fb960b77b2e572a32b960749f29a7065c4a\ecc_dec.\correct_codeword$func$ecc_dec.sv:267$381.cw' from process `$paramod$c7395fb960b77b2e572a32b960749f29a7065c4a\ecc_dec.$proc$ecc_dec.sv:0$509'.
No latch inferred for signal `$paramod$c7395fb960b77b2e572a32b960749f29a7065c4a\ecc_dec.\correct_codeword$func$ecc_dec.sv:267$381.syndrome' from process `$paramod$c7395fb960b77b2e572a32b960749f29a7065c4a\ecc_dec.$proc$ecc_dec.sv:0$509'.
No latch inferred for signal `$paramod$c7395fb960b77b2e572a32b960749f29a7065c4a\ecc_dec.$bitselwrite$pos$ecc_dec.sv:167$382' from process `$paramod$c7395fb960b77b2e572a32b960749f29a7065c4a\ecc_dec.$proc$ecc_dec.sv:0$509'.
No latch inferred for signal `$paramod$c7395fb960b77b2e572a32b960749f29a7065c4a\ecc_dec.\calculate_syndrome$func$ecc_dec.sv:238$376.$result' from process `$paramod$c7395fb960b77b2e572a32b960749f29a7065c4a\ecc_dec.$proc$ecc_dec.sv:0$413'.
No latch inferred for signal `$paramod$c7395fb960b77b2e572a32b960749f29a7065c4a\ecc_dec.\calculate_syndrome$func$ecc_dec.sv:238$380.$result' from process `$paramod$c7395fb960b77b2e572a32b960749f29a7065c4a\ecc_dec.$proc$ecc_dec.sv:0$413'.
No latch inferred for signal `$paramod$c7395fb960b77b2e572a32b960749f29a7065c4a\ecc_dec.\calculate_syndrome$func$ecc_dec.sv:238$380.cw' from process `$paramod$c7395fb960b77b2e572a32b960749f29a7065c4a\ecc_dec.$proc$ecc_dec.sv:0$413'.
No latch inferred for signal `$paramod$c7395fb960b77b2e572a32b960749f29a7065c4a\ecc_dec.\calculate_syndrome$func$ecc_dec.sv:238$380.p_idx' from process `$paramod$c7395fb960b77b2e572a32b960749f29a7065c4a\ecc_dec.$proc$ecc_dec.sv:0$413'.
No latch inferred for signal `$paramod$c7395fb960b77b2e572a32b960749f29a7065c4a\ecc_dec.\calculate_syndrome$func$ecc_dec.sv:238$380.cw_idx' from process `$paramod$c7395fb960b77b2e572a32b960749f29a7065c4a\ecc_dec.$proc$ecc_dec.sv:0$413'.

6.2.9. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\ecc_formal.\f_counter' using process `\ecc_formal.$proc$ecc_formal.v:102$95'.
  created $ff cell `$procdff$3701' with global clock.
Creating register for signal `\ecc_formal.$past$ecc_formal.v:110$17$0' using process `\ecc_formal.$proc$ecc_formal.v:109$101'.
  created $ff cell `$procdff$3702' with global clock.
Creating register for signal `\ecc_formal.$past$ecc_formal.v:111$18$0' using process `\ecc_formal.$proc$ecc_formal.v:109$101'.
  created $ff cell `$procdff$3703' with global clock.
Creating register for signal `\ecc_formal.$past$ecc_formal.v:111$18$1' using process `\ecc_formal.$proc$ecc_formal.v:109$101'.
  created $ff cell `$procdff$3704' with global clock.
Creating register for signal `\ecc_formal.$past$ecc_formal.v:112$19$0' using process `\ecc_formal.$proc$ecc_formal.v:109$101'.
  created $ff cell `$procdff$3705' with global clock.
Creating register for signal `\ecc_formal.$past$ecc_formal.v:112$19$1' using process `\ecc_formal.$proc$ecc_formal.v:109$101'.
  created $ff cell `$procdff$3706' with global clock.
Creating register for signal `\ecc_formal.$past$ecc_formal.v:112$19$2' using process `\ecc_formal.$proc$ecc_formal.v:109$101'.
  created $ff cell `$procdff$3707' with global clock.
Creating register for signal `\ecc_formal.$past$ecc_formal.v:113$20$0' using process `\ecc_formal.$proc$ecc_formal.v:109$101'.
  created $ff cell `$procdff$3708' with global clock.
Creating register for signal `\ecc_formal.$past$ecc_formal.v:113$20$1' using process `\ecc_formal.$proc$ecc_formal.v:109$101'.
  created $ff cell `$procdff$3709' with global clock.
Creating register for signal `\ecc_formal.$past$ecc_formal.v:113$20$2' using process `\ecc_formal.$proc$ecc_formal.v:109$101'.
  created $ff cell `$procdff$3710' with global clock.
Creating register for signal `\ecc_formal.$past$ecc_formal.v:113$20$3' using process `\ecc_formal.$proc$ecc_formal.v:109$101'.
  created $ff cell `$procdff$3711' with global clock.
Creating register for signal `\ecc_formal.$past$ecc_formal.v:114$21$0' using process `\ecc_formal.$proc$ecc_formal.v:109$101'.
  created $ff cell `$procdff$3712' with global clock.
Creating register for signal `\ecc_formal.$past$ecc_formal.v:114$21$1' using process `\ecc_formal.$proc$ecc_formal.v:109$101'.
  created $ff cell `$procdff$3713' with global clock.
Creating register for signal `\ecc_formal.$past$ecc_formal.v:114$21$2' using process `\ecc_formal.$proc$ecc_formal.v:109$101'.
  created $ff cell `$procdff$3714' with global clock.
Creating register for signal `\ecc_formal.$past$ecc_formal.v:114$21$3' using process `\ecc_formal.$proc$ecc_formal.v:109$101'.
  created $ff cell `$procdff$3715' with global clock.
Creating register for signal `\ecc_formal.$past$ecc_formal.v:114$21$4' using process `\ecc_formal.$proc$ecc_formal.v:109$101'.
  created $ff cell `$procdff$3716' with global clock.
Creating register for signal `\ecc_formal.$past$ecc_formal.v:115$22$0' using process `\ecc_formal.$proc$ecc_formal.v:109$101'.
  created $ff cell `$procdff$3717' with global clock.
Creating register for signal `\ecc_formal.$past$ecc_formal.v:115$22$1' using process `\ecc_formal.$proc$ecc_formal.v:109$101'.
  created $ff cell `$procdff$3718' with global clock.
Creating register for signal `\ecc_formal.$past$ecc_formal.v:115$22$2' using process `\ecc_formal.$proc$ecc_formal.v:109$101'.
  created $ff cell `$procdff$3719' with global clock.
Creating register for signal `\ecc_formal.$past$ecc_formal.v:115$22$3' using process `\ecc_formal.$proc$ecc_formal.v:109$101'.
  created $ff cell `$procdff$3720' with global clock.
Creating register for signal `\ecc_formal.$past$ecc_formal.v:115$22$4' using process `\ecc_formal.$proc$ecc_formal.v:109$101'.
  created $ff cell `$procdff$3721' with global clock.
Creating register for signal `\ecc_formal.$past$ecc_formal.v:115$22$5' using process `\ecc_formal.$proc$ecc_formal.v:109$101'.
  created $ff cell `$procdff$3722' with global clock.
Creating register for signal `\ecc_formal.$past$ecc_formal.v:116$23$0' using process `\ecc_formal.$proc$ecc_formal.v:109$101'.
  created $ff cell `$procdff$3723' with global clock.
Creating register for signal `\ecc_formal.$past$ecc_formal.v:116$23$1' using process `\ecc_formal.$proc$ecc_formal.v:109$101'.
  created $ff cell `$procdff$3724' with global clock.
Creating register for signal `\ecc_formal.$past$ecc_formal.v:116$23$2' using process `\ecc_formal.$proc$ecc_formal.v:109$101'.
  created $ff cell `$procdff$3725' with global clock.
Creating register for signal `\ecc_formal.$past$ecc_formal.v:116$23$3' using process `\ecc_formal.$proc$ecc_formal.v:109$101'.
  created $ff cell `$procdff$3726' with global clock.
Creating register for signal `\ecc_formal.$past$ecc_formal.v:116$23$4' using process `\ecc_formal.$proc$ecc_formal.v:109$101'.
  created $ff cell `$procdff$3727' with global clock.
Creating register for signal `\ecc_formal.$past$ecc_formal.v:116$23$5' using process `\ecc_formal.$proc$ecc_formal.v:109$101'.
  created $ff cell `$procdff$3728' with global clock.
Creating register for signal `\ecc_formal.$past$ecc_formal.v:116$23$6' using process `\ecc_formal.$proc$ecc_formal.v:109$101'.
  created $ff cell `$procdff$3729' with global clock.
Creating register for signal `\ecc_formal.$past$ecc_formal.v:117$24$0' using process `\ecc_formal.$proc$ecc_formal.v:109$101'.
  created $ff cell `$procdff$3730' with global clock.
Creating register for signal `\ecc_formal.$past$ecc_formal.v:117$24$1' using process `\ecc_formal.$proc$ecc_formal.v:109$101'.
  created $ff cell `$procdff$3731' with global clock.
Creating register for signal `\ecc_formal.$past$ecc_formal.v:117$24$2' using process `\ecc_formal.$proc$ecc_formal.v:109$101'.
  created $ff cell `$procdff$3732' with global clock.
Creating register for signal `\ecc_formal.$past$ecc_formal.v:117$24$3' using process `\ecc_formal.$proc$ecc_formal.v:109$101'.
  created $ff cell `$procdff$3733' with global clock.
Creating register for signal `\ecc_formal.$past$ecc_formal.v:117$24$4' using process `\ecc_formal.$proc$ecc_formal.v:109$101'.
  created $ff cell `$procdff$3734' with global clock.
Creating register for signal `\ecc_formal.$past$ecc_formal.v:117$24$5' using process `\ecc_formal.$proc$ecc_formal.v:109$101'.
  created $ff cell `$procdff$3735' with global clock.
Creating register for signal `\ecc_formal.$past$ecc_formal.v:117$24$6' using process `\ecc_formal.$proc$ecc_formal.v:109$101'.
  created $ff cell `$procdff$3736' with global clock.
Creating register for signal `\ecc_formal.$past$ecc_formal.v:117$24$7' using process `\ecc_formal.$proc$ecc_formal.v:109$101'.
  created $ff cell `$procdff$3737' with global clock.
Creating register for signal `\ecc_formal.$past$ecc_formal.v:118$25$0' using process `\ecc_formal.$proc$ecc_formal.v:109$101'.
  created $ff cell `$procdff$3738' with global clock.
Creating register for signal `\ecc_formal.$past$ecc_formal.v:118$25$1' using process `\ecc_formal.$proc$ecc_formal.v:109$101'.
  created $ff cell `$procdff$3739' with global clock.
Creating register for signal `\ecc_formal.$past$ecc_formal.v:118$25$2' using process `\ecc_formal.$proc$ecc_formal.v:109$101'.
  created $ff cell `$procdff$3740' with global clock.
Creating register for signal `\ecc_formal.$past$ecc_formal.v:118$25$3' using process `\ecc_formal.$proc$ecc_formal.v:109$101'.
  created $ff cell `$procdff$3741' with global clock.
Creating register for signal `\ecc_formal.$past$ecc_formal.v:118$25$4' using process `\ecc_formal.$proc$ecc_formal.v:109$101'.
  created $ff cell `$procdff$3742' with global clock.
Creating register for signal `\ecc_formal.$past$ecc_formal.v:118$25$5' using process `\ecc_formal.$proc$ecc_formal.v:109$101'.
  created $ff cell `$procdff$3743' with global clock.
Creating register for signal `\ecc_formal.$past$ecc_formal.v:118$25$6' using process `\ecc_formal.$proc$ecc_formal.v:109$101'.
  created $ff cell `$procdff$3744' with global clock.
Creating register for signal `\ecc_formal.$past$ecc_formal.v:118$25$7' using process `\ecc_formal.$proc$ecc_formal.v:109$101'.
  created $ff cell `$procdff$3745' with global clock.
Creating register for signal `\ecc_formal.$past$ecc_formal.v:118$25$8' using process `\ecc_formal.$proc$ecc_formal.v:109$101'.
  created $ff cell `$procdff$3746' with global clock.
Creating register for signal `\ecc_formal.$past$ecc_formal.v:119$26$0' using process `\ecc_formal.$proc$ecc_formal.v:109$101'.
  created $ff cell `$procdff$3747' with global clock.
Creating register for signal `\ecc_formal.$past$ecc_formal.v:119$26$1' using process `\ecc_formal.$proc$ecc_formal.v:109$101'.
  created $ff cell `$procdff$3748' with global clock.
Creating register for signal `\ecc_formal.$past$ecc_formal.v:119$26$2' using process `\ecc_formal.$proc$ecc_formal.v:109$101'.
  created $ff cell `$procdff$3749' with global clock.
Creating register for signal `\ecc_formal.$past$ecc_formal.v:119$26$3' using process `\ecc_formal.$proc$ecc_formal.v:109$101'.
  created $ff cell `$procdff$3750' with global clock.
Creating register for signal `\ecc_formal.$past$ecc_formal.v:119$26$4' using process `\ecc_formal.$proc$ecc_formal.v:109$101'.
  created $ff cell `$procdff$3751' with global clock.
Creating register for signal `\ecc_formal.$past$ecc_formal.v:119$26$5' using process `\ecc_formal.$proc$ecc_formal.v:109$101'.
  created $ff cell `$procdff$3752' with global clock.
Creating register for signal `\ecc_formal.$past$ecc_formal.v:119$26$6' using process `\ecc_formal.$proc$ecc_formal.v:109$101'.
  created $ff cell `$procdff$3753' with global clock.
Creating register for signal `\ecc_formal.$past$ecc_formal.v:119$26$7' using process `\ecc_formal.$proc$ecc_formal.v:109$101'.
  created $ff cell `$procdff$3754' with global clock.
Creating register for signal `\ecc_formal.$past$ecc_formal.v:119$26$8' using process `\ecc_formal.$proc$ecc_formal.v:109$101'.
  created $ff cell `$procdff$3755' with global clock.
Creating register for signal `\ecc_formal.$past$ecc_formal.v:119$26$9' using process `\ecc_formal.$proc$ecc_formal.v:109$101'.
  created $ff cell `$procdff$3756' with global clock.

6.2.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

6.2.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `$paramod$0215d1033c08c4f67a7b1e7962c82006c46f15ed\ecc_enc.$proc$ecc_enc.sv:0$369'.
Removing empty process `$paramod$0215d1033c08c4f67a7b1e7962c82006c46f15ed\ecc_enc.$proc$ecc_enc.sv:0$273'.
Removing empty process `$paramod$0215d1033c08c4f67a7b1e7962c82006c46f15ed\ecc_enc.$proc$ecc_enc.sv:0$187'.
Found and cleaned up 2 empty switches in `\ecc_formal.$proc$ecc_formal.v:66$31'.
Removing empty process `ecc_formal.$proc$ecc_formal.v:66$31'.
Found and cleaned up 3 empty switches in `\ecc_formal.$proc$ecc_formal.v:81$75'.
Removing empty process `ecc_formal.$proc$ecc_formal.v:81$75'.
Removing empty process `ecc_formal.$proc$ecc_formal.v:102$95'.
Removing empty process `ecc_formal.$proc$ecc_formal.v:109$101'.
Removing empty process `ecc_formal.$proc$ecc_formal.v:61$177'.
Removing empty process `ecc_formal.$proc$ecc_formal.v:62$178'.
Removing empty process `$paramod$c7395fb960b77b2e572a32b960749f29a7065c4a\ecc_dec.$proc$ecc_dec.sv:0$654'.
Removing empty process `$paramod$c7395fb960b77b2e572a32b960749f29a7065c4a\ecc_dec.$proc$ecc_dec.sv:0$642'.
Found and cleaned up 31 empty switches in `$paramod$c7395fb960b77b2e572a32b960749f29a7065c4a\ecc_dec.$proc$ecc_dec.sv:0$524'.
Removing empty process `$paramod$c7395fb960b77b2e572a32b960749f29a7065c4a\ecc_dec.$proc$ecc_dec.sv:0$524'.
Removing empty process `$paramod$c7395fb960b77b2e572a32b960749f29a7065c4a\ecc_dec.$proc$ecc_dec.sv:0$509'.
Removing empty process `$paramod$c7395fb960b77b2e572a32b960749f29a7065c4a\ecc_dec.$proc$ecc_dec.sv:0$413'.
Cleaned up 36 empty switches.

6.2.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$0215d1033c08c4f67a7b1e7962c82006c46f15ed\ecc_enc.
<suppressed ~58 debug messages>
Optimizing module ecc_formal.
<suppressed ~1 debug messages>
Optimizing module $paramod$c7395fb960b77b2e572a32b960749f29a7065c4a\ecc_dec.
<suppressed ~583 debug messages>

6.3. Executing FUTURE pass.

6.4. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$0215d1033c08c4f67a7b1e7962c82006c46f15ed\ecc_enc.
Optimizing module ecc_formal.
Optimizing module $paramod$c7395fb960b77b2e572a32b960749f29a7065c4a\ecc_dec.

6.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$0215d1033c08c4f67a7b1e7962c82006c46f15ed\ecc_enc..
Finding unused cells or wires in module \ecc_formal..
Finding unused cells or wires in module $paramod$c7395fb960b77b2e572a32b960749f29a7065c4a\ecc_dec..
Removed 7 unused cells and 1028 unused wires.
<suppressed ~10 debug messages>

6.6. Executing CHECK pass (checking for obvious problems).
Checking module $paramod$0215d1033c08c4f67a7b1e7962c82006c46f15ed\ecc_enc...
Checking module $paramod$c7395fb960b77b2e572a32b960749f29a7065c4a\ecc_dec...
Checking module ecc_formal...
Found and reported 0 problems.

6.7. Executing OPT pass (performing simple optimizations).

6.7.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$0215d1033c08c4f67a7b1e7962c82006c46f15ed\ecc_enc.
Optimizing module $paramod$c7395fb960b77b2e572a32b960749f29a7065c4a\ecc_dec.
Optimizing module ecc_formal.

6.7.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$0215d1033c08c4f67a7b1e7962c82006c46f15ed\ecc_enc'.
Finding identical cells in module `$paramod$c7395fb960b77b2e572a32b960749f29a7065c4a\ecc_dec'.
<suppressed ~9 debug messages>
Finding identical cells in module `\ecc_formal'.
<suppressed ~48 debug messages>
Removed a total of 19 cells.

6.7.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$0215d1033c08c4f67a7b1e7962c82006c46f15ed\ecc_enc..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod$c7395fb960b77b2e572a32b960749f29a7065c4a\ecc_dec..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \ecc_formal..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $procmux$659.
Removed 1 multiplexer ports.
<suppressed ~9 debug messages>

6.7.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod$0215d1033c08c4f67a7b1e7962c82006c46f15ed\ecc_enc.
  Optimizing cells in module $paramod$c7395fb960b77b2e572a32b960749f29a7065c4a\ecc_dec.
  Optimizing cells in module \ecc_formal.
Performed a total of 0 changes.

6.7.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$0215d1033c08c4f67a7b1e7962c82006c46f15ed\ecc_enc'.
Finding identical cells in module `$paramod$c7395fb960b77b2e572a32b960749f29a7065c4a\ecc_dec'.
Finding identical cells in module `\ecc_formal'.
<suppressed ~27 debug messages>
Removed a total of 9 cells.

6.7.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$0215d1033c08c4f67a7b1e7962c82006c46f15ed\ecc_enc..
Finding unused cells or wires in module $paramod$c7395fb960b77b2e572a32b960749f29a7065c4a\ecc_dec..
Finding unused cells or wires in module \ecc_formal..
Removed 0 unused cells and 29 unused wires.
<suppressed ~2 debug messages>

6.7.7. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$0215d1033c08c4f67a7b1e7962c82006c46f15ed\ecc_enc.
Optimizing module $paramod$c7395fb960b77b2e572a32b960749f29a7065c4a\ecc_dec.
Optimizing module ecc_formal.

6.7.8. Rerunning OPT passes. (Maybe there is more to do..)

6.7.9. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$0215d1033c08c4f67a7b1e7962c82006c46f15ed\ecc_enc..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod$c7395fb960b77b2e572a32b960749f29a7065c4a\ecc_dec..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \ecc_formal..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~4 debug messages>

6.7.10. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod$0215d1033c08c4f67a7b1e7962c82006c46f15ed\ecc_enc.
  Optimizing cells in module $paramod$c7395fb960b77b2e572a32b960749f29a7065c4a\ecc_dec.
  Optimizing cells in module \ecc_formal.
Performed a total of 0 changes.

6.7.11. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$0215d1033c08c4f67a7b1e7962c82006c46f15ed\ecc_enc'.
Finding identical cells in module `$paramod$c7395fb960b77b2e572a32b960749f29a7065c4a\ecc_dec'.
Finding identical cells in module `\ecc_formal'.
Removed a total of 0 cells.

6.7.12. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$0215d1033c08c4f67a7b1e7962c82006c46f15ed\ecc_enc..
Finding unused cells or wires in module $paramod$c7395fb960b77b2e572a32b960749f29a7065c4a\ecc_dec..
Finding unused cells or wires in module \ecc_formal..

6.7.13. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$0215d1033c08c4f67a7b1e7962c82006c46f15ed\ecc_enc.
Optimizing module $paramod$c7395fb960b77b2e572a32b960749f29a7065c4a\ecc_dec.
Optimizing module ecc_formal.

6.7.14. Finished OPT passes. (There is nothing left to do.)

6.8. Executing WREDUCE pass (reducing word size of cells).
Converting cell $paramod$c7395fb960b77b2e572a32b960749f29a7065c4a\ecc_dec.$neg$ecc_dec.sv:0$515 ($neg) from signed to unsigned.
Removed top 1 bits (of 6) from port A of cell $paramod$c7395fb960b77b2e572a32b960749f29a7065c4a\ecc_dec.$neg$ecc_dec.sv:0$515 ($neg).
Removed top 26 bits (of 32) from port A of cell $paramod$c7395fb960b77b2e572a32b960749f29a7065c4a\ecc_dec.$sub$ecc_dec.sv:186$648 ($sub).
Removed top 30 bits (of 32) from port B of cell $paramod$c7395fb960b77b2e572a32b960749f29a7065c4a\ecc_dec.$sub$ecc_dec.sv:186$648 ($sub).
Converting cell $paramod$c7395fb960b77b2e572a32b960749f29a7065c4a\ecc_dec.$sub$ecc_dec.sv:186$648 ($sub) from signed to unsigned.
Removed top 25 bits (of 32) from port Y of cell $paramod$c7395fb960b77b2e572a32b960749f29a7065c4a\ecc_dec.$sub$ecc_dec.sv:186$648 ($sub).
Removed top 1 bits (of 6) from port A of cell $paramod$c7395fb960b77b2e572a32b960749f29a7065c4a\ecc_dec.$sub$ecc_dec.sv:186$648 ($sub).
Removed top 1 bits (of 2) from port B of cell $paramod$c7395fb960b77b2e572a32b960749f29a7065c4a\ecc_dec.$sub$ecc_dec.sv:186$648 ($sub).
Removed top 1 bits (of 7) from port Y of cell $paramod$c7395fb960b77b2e572a32b960749f29a7065c4a\ecc_dec.$sub$ecc_dec.sv:186$648 ($sub).
Removed top 26 bits (of 32) from port A of cell $paramod$c7395fb960b77b2e572a32b960749f29a7065c4a\ecc_dec.$and$ecc_dec.sv:186$649 ($and).
Removed top 26 bits (of 32) from port B of cell $paramod$c7395fb960b77b2e572a32b960749f29a7065c4a\ecc_dec.$and$ecc_dec.sv:186$649 ($and).
Removed top 26 bits (of 32) from port Y of cell $paramod$c7395fb960b77b2e572a32b960749f29a7065c4a\ecc_dec.$and$ecc_dec.sv:186$649 ($and).
Removed top 1 bits (of 2) from port B of cell ecc_formal.$eq$ecc_formal.v:68$35 ($eq).
Converting cell ecc_formal.$neg$ecc_formal.v:0$39 ($neg) from signed to unsigned.
Removed top 1 bits (of 6) from port A of cell ecc_formal.$neg$ecc_formal.v:0$39 ($neg).
Converting cell ecc_formal.$neg$ecc_formal.v:0$60 ($neg) from signed to unsigned.
Removed top 1 bits (of 6) from port A of cell ecc_formal.$neg$ecc_formal.v:0$60 ($neg).
Removed top 27 bits (of 32) from port B of cell ecc_formal.$le$ecc_formal.v:76$72 ($le).
Removed top 27 bits (of 32) from port B of cell ecc_formal.$le$ecc_formal.v:77$74 ($le).
Removed top 31 bits (of 32) from port B of cell ecc_formal.$add$ecc_formal.v:103$96 ($add).
Removed top 22 bits (of 32) from port Y of cell ecc_formal.$add$ecc_formal.v:103$96 ($add).
Removed top 6 bits (of 10) from port B of cell ecc_formal.$eq$ecc_formal.v:105$100 ($eq).

6.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$0215d1033c08c4f67a7b1e7962c82006c46f15ed\ecc_enc..
Finding unused cells or wires in module $paramod$c7395fb960b77b2e572a32b960749f29a7065c4a\ecc_dec..
Finding unused cells or wires in module \ecc_formal..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

6.10. Executing MEMORY_COLLECT pass (generating $mem cells).

6.11. Executing OPT pass (performing simple optimizations).

6.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$0215d1033c08c4f67a7b1e7962c82006c46f15ed\ecc_enc.
Optimizing module $paramod$c7395fb960b77b2e572a32b960749f29a7065c4a\ecc_dec.
Optimizing module ecc_formal.

6.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$0215d1033c08c4f67a7b1e7962c82006c46f15ed\ecc_enc'.
Finding identical cells in module `$paramod$c7395fb960b77b2e572a32b960749f29a7065c4a\ecc_dec'.
Finding identical cells in module `\ecc_formal'.
Removed a total of 0 cells.

6.11.3. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$0215d1033c08c4f67a7b1e7962c82006c46f15ed\ecc_enc..
Finding unused cells or wires in module $paramod$c7395fb960b77b2e572a32b960749f29a7065c4a\ecc_dec..
Finding unused cells or wires in module \ecc_formal..

6.11.4. Finished fast OPT passes.

6.12. Printing statistics.

=== $paramod$0215d1033c08c4f67a7b1e7962c82006c46f15ed\ecc_enc ===

   Number of wires:                 45
   Number of wire bits:            339
   Number of public wires:          15
   Number of public wire bits:     309
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 36
     $reduce_xor                     1
     $xor                           35

=== $paramod$c7395fb960b77b2e572a32b960749f29a7065c4a\ecc_dec ===

   Number of wires:                 83
   Number of wire bits:            608
   Number of public wires:          32
   Number of public wire bits:     406
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 62
     $and                            7
     $logic_not                      3
     $logic_or                       1
     $neg                            1
     $not                            3
     $or                             1
     $reduce_or                      1
     $reduce_xor                     1
     $shift                          2
     $shiftx                         1
     $sub                            1
     $xor                           40

=== ecc_formal ===

   Number of wires:                113
   Number of wire bits:           1278
   Number of public wires:          11
   Number of public wire bits:     101
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                133
     $add                            1
     $and                            2
     $anyseq                         4
     $check                         23
     $eq                             6
     $ff                            56
     $le                             2
     $logic_not                      5
     $logic_or                       1
     $mux                            8
     $ne                            11
     $neg                            2
     $not                            2
     $or                             2
     $paramod$0215d1033c08c4f67a7b1e7962c82006c46f15ed\ecc_enc      1
     $paramod$c7395fb960b77b2e572a32b960749f29a7065c4a\ecc_dec      1
     $shift                          4
     $shiftx                         2

=== design hierarchy ===

   ecc_formal                        1
     $paramod$0215d1033c08c4f67a7b1e7962c82006c46f15ed\ecc_enc      1
     $paramod$c7395fb960b77b2e572a32b960749f29a7065c4a\ecc_dec      1

   Number of wires:                241
   Number of wire bits:           2225
   Number of public wires:          58
   Number of public wire bits:     816
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                229
     $add                            1
     $and                            9
     $anyseq                         4
     $check                         23
     $eq                             6
     $ff                            56
     $le                             2
     $logic_not                      8
     $logic_or                       2
     $mux                            8
     $ne                            11
     $neg                            3
     $not                            5
     $or                             3
     $reduce_or                      1
     $reduce_xor                     2
     $shift                          6
     $shiftx                         3
     $sub                            1
     $xor                           75

6.13. Executing CHECK pass (checking for obvious problems).
Checking module $paramod$0215d1033c08c4f67a7b1e7962c82006c46f15ed\ecc_enc...
Checking module $paramod$c7395fb960b77b2e572a32b960749f29a7065c4a\ecc_dec...
Checking module ecc_formal...
Found and reported 0 problems.

7. Executing HIERARCHY pass (managing design hierarchy).

7.1. Analyzing design hierarchy..
Top module:  \ecc_formal
Used module:     $paramod$c7395fb960b77b2e572a32b960749f29a7065c4a\ecc_dec
Used module:     $paramod$0215d1033c08c4f67a7b1e7962c82006c46f15ed\ecc_enc

7.2. Analyzing design hierarchy..
Top module:  \ecc_formal
Used module:     $paramod$c7395fb960b77b2e572a32b960749f29a7065c4a\ecc_dec
Used module:     $paramod$0215d1033c08c4f67a7b1e7962c82006c46f15ed\ecc_enc
Removed 0 unused modules.
Module ecc_formal directly or indirectly contains formal properties -> setting "keep" attribute.

8. Executing jny backend.

9. Executing RTLIL backend.
Output filename: ../model/design.il

End of script. Logfile hash: d481cd6862, CPU: user 0.18s system 0.01s, MEM: 15.38 MB peak
Yosys 0.38+113 (git sha1 91fbd5898, clang++ 14.0.0-1ubuntu1.1 -fPIC -Os)
Time spent: 28% 3x hierarchy (0 sec), 16% 6x opt_expr (0 sec), ...
